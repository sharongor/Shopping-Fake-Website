{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hodor\\\\OneDrive\\\\Desktop\\\\roni - computers HIT\\\\Third Year\\\\Semester B\\\\Android2\\\\Final Project\\\\my-app\\\\src\\\\components\\\\SingleItemList.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SingleItemList({\n  value,\n  addToCart\n}) {\n  const formatPrice = price => {\n    const numberPrice = parseFloat(price); // Convert to number if it's a string\n    if (isNaN(numberPrice)) {\n      return \"N/A\"; // Handle cases where the price is not a valid number\n    }\n    return numberPrice.toFixed(2); // Format to 2 decimal places\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: value.image,\n          alt: value.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: value.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u20AA \", formatPrice(value.price)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonsItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addToCart(value),\n          className: \"item-add-cart\",\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"item-buy-cart\",\n          children: \"Buy Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = SingleItemList;\nvar _c;\n$RefreshReg$(_c, \"SingleItemList\");","map":{"version":3,"names":["SingleItemList","value","addToCart","formatPrice","price","numberPrice","parseFloat","isNaN","toFixed","_jsxDEV","_Fragment","children","className","href","src","image","alt","category","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hodor/OneDrive/Desktop/roni - computers HIT/Third Year/Semester B/Android2/Final Project/my-app/src/components/SingleItemList.jsx"],"sourcesContent":["export default function SingleItemList({ value, addToCart }) {\r\n  const formatPrice = (price) => {\r\n    const numberPrice = parseFloat(price); // Convert to number if it's a string\r\n    if (isNaN(numberPrice)) {\r\n      return \"N/A\"; // Handle cases where the price is not a valid number\r\n    }\r\n    return numberPrice.toFixed(2); // Format to 2 decimal places\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"item\">\r\n        <a href=\"item\">\r\n          <img src={value.image} alt={value.category} />\r\n        </a>\r\n        <h2>{value.title}</h2>\r\n        <h3>â‚ª {formatPrice(value.price)}</h3>\r\n        <div className=\"buttonsItem\">\r\n          <button onClick={() => addToCart(value)} className=\"item-add-cart\">\r\n            Add to Cart\r\n          </button>\r\n          <button className=\"item-buy-cart\">Buy Now</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,eAAe,SAASA,cAAcA,CAAC;EAAEC,KAAK;EAAEC;AAAU,CAAC,EAAE;EAC3D,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,WAAW,GAAGC,UAAU,CAACF,KAAK,CAAC,CAAC,CAAC;IACvC,IAAIG,KAAK,CAACF,WAAW,CAAC,EAAE;MACtB,OAAO,KAAK,CAAC,CAAC;IAChB;IACA,OAAOA,WAAW,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;EACD,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACEF,OAAA;MAAKG,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBF,OAAA;QAAGI,IAAI,EAAC,MAAM;QAAAF,QAAA,eACZF,OAAA;UAAKK,GAAG,EAAEb,KAAK,CAACc,KAAM;UAACC,GAAG,EAAEf,KAAK,CAACgB;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACJZ,OAAA;QAAAE,QAAA,EAAKV,KAAK,CAACqB;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBZ,OAAA;QAAAE,QAAA,GAAI,SAAE,EAACR,WAAW,CAACF,KAAK,CAACG,KAAK,CAAC;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrCZ,OAAA;QAAKG,SAAS,EAAC,aAAa;QAAAD,QAAA,gBAC1BF,OAAA;UAAQc,OAAO,EAAEA,CAAA,KAAMrB,SAAS,CAACD,KAAK,CAAE;UAACW,SAAS,EAAC,eAAe;UAAAD,QAAA,EAAC;QAEnE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTZ,OAAA;UAAQG,SAAS,EAAC,eAAe;UAAAD,QAAA,EAAC;QAAO;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACG,EAAA,GAzBuBxB,cAAc;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}