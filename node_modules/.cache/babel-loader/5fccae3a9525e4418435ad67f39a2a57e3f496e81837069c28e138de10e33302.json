{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hodor\\\\OneDrive\\\\Desktop\\\\roni - computers HIT\\\\Third Year\\\\Semester B\\\\Android2\\\\Final Project\\\\my-app\\\\src\\\\components\\\\Cart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Cart.css\"; // Import the CSS file\nimport Cart2 from \"./Cart2.jsx\";\nimport Header from \"./Header.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cart = ({\n  cartItems,\n  removeFromCart,\n  isLogged,\n  handleLogOut\n}) => {\n  _s();\n  const [totalToPay, setTotal] = useState(0);\n  function handleTotalPay(price, increase, decrease) {\n    if (increase) {\n      setTotal(prev => prev + price);\n    }\n    if (decrease) {\n      setTotal(prev => prev - price);\n    }\n  }\n  function calculateInitialPrice() {\n    let total = 0;\n    cartItems.forEach(item => {\n      total += item.price;\n    });\n    setTotal(total);\n  }\n  // Use useEffect to calculate initial total price on mount or when cartItems change\n  useEffect(() => {\n    calculateInitialPrice();\n  }, [cartItems]);\n  const formatPrice = price => {\n    const numberPrice = parseFloat(price); // Convert to number if it's a string\n    if (isNaN(numberPrice)) {\n      return \"N/A\"; // Handle cases where the price is not a valid number\n    }\n    return numberPrice.toFixed(2); // Format to 2 decimal places\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      amountCart: cartItems.length,\n      isLogged: isLogged,\n      handleLogOut: () => handleLogOut(null, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\",\n      children: cartItems.length > 0 ? cartItems.map((cartItem, index) => /*#__PURE__*/_jsxDEV(Cart2, {\n        cartItem: cartItem,\n        removeFromCart: () => removeFromCart(index),\n        handleTotalPay: handleTotalPay\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"cart-empty\",\n        children: \"Your shopping cart is empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), totalToPay != 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Total to pay: \", formatPrice(totalToPay), \"\\u20AA\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n};\n_s(Cart, \"724f4S9nNLGvU+4n23eohkTGtds=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","Cart2","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","Cart","cartItems","removeFromCart","isLogged","handleLogOut","_s","totalToPay","setTotal","handleTotalPay","price","increase","decrease","prev","calculateInitialPrice","total","forEach","item","formatPrice","numberPrice","parseFloat","isNaN","toFixed","children","amountCart","length","fileName","_jsxFileName","lineNumber","columnNumber","className","map","cartItem","index","_c","$RefreshReg$"],"sources":["C:/Users/hodor/OneDrive/Desktop/roni - computers HIT/Third Year/Semester B/Android2/Final Project/my-app/src/components/Cart.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Cart.css\"; // Import the CSS file\r\nimport Cart2 from \"./Cart2.jsx\";\r\nimport Header from \"./Header.jsx\";\r\nconst Cart = ({ cartItems, removeFromCart, isLogged, handleLogOut }) => {\r\n  const [totalToPay, setTotal] = useState(0);\r\n\r\n  function handleTotalPay(price, increase, decrease) {\r\n    if (increase) {\r\n      setTotal((prev) => prev + price);\r\n    }\r\n    if (decrease) {\r\n      setTotal((prev) => prev - price);\r\n    }\r\n  }\r\n\r\n  function calculateInitialPrice() {\r\n    let total = 0;\r\n    cartItems.forEach((item) => {\r\n      total += item.price;\r\n    });\r\n    setTotal(total);\r\n  }\r\n  // Use useEffect to calculate initial total price on mount or when cartItems change\r\n  useEffect(() => {\r\n    calculateInitialPrice();\r\n  }, [cartItems]);\r\n\r\n  const formatPrice = (price) => {\r\n    const numberPrice = parseFloat(price); // Convert to number if it's a string\r\n    if (isNaN(numberPrice)) {\r\n      return \"N/A\"; // Handle cases where the price is not a valid number\r\n    }\r\n    return numberPrice.toFixed(2); // Format to 2 decimal places\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        amountCart={cartItems.length}\r\n        isLogged={isLogged}\r\n        handleLogOut={() => handleLogOut(null, false)}\r\n      />\r\n\r\n      <div className=\"cart-items\">\r\n        {cartItems.length > 0 ? (\r\n          cartItems.map((cartItem, index) => (\r\n            <Cart2\r\n              key={index}\r\n              cartItem={cartItem}\r\n              removeFromCart={() => removeFromCart(index)}\r\n              handleTotalPay={handleTotalPay}\r\n            />\r\n          ))\r\n        ) : (\r\n          <h1 className=\"cart-empty\">Your shopping cart is empty!</h1>\r\n        )}\r\n      </div>\r\n      {totalToPay != 0 && <h1>Total to pay: {formatPrice(totalToPay)}â‚ª</h1>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}